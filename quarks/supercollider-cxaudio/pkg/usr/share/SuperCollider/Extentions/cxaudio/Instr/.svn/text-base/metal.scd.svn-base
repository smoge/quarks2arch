

Instr([\metal,\titewoody],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
		// tite woody
	[ `(#[ [ 859, 18973, 17077, 17189, 1427, 2441, 6481, 11688, 16411, 1950, 
	  6793, 3088, 8861, 2795, 14281, 11383, 16313, 16301, 4340, 4101 ], nil, [ 0.127808, 0.0160289, 0.0222603, 0.0156637, 0.309441, 0.044308, 0.274721, 0.0520477, 0.0197506, 0.188093 ] ]), `(#[ [ 859, 18973, 17077, 17189, 1427, 2441, 6481, 11688, 16411, 1950, 
	  6793, 3088, 8861, 2795, 14281, 11383, 16313, 16301, 4340, 4101 ], nil, [ 0.287593, 0.0334687, 0.11472, 0.0231302, 0.0367275, 0.0292539, 0.0267082, 0.0609702, 0.0164628, 0.0448704 ] ]) ];	
	
		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\straittinkin],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
			// straight tinkin
			[ `(#[ [ 6627, 5167, 8329, 2627, 12429, 1965, 8501, 1113, 10267, 10605, 
			  10924, 4111, 7789, 14523, 12359, 15788, 8681, 14008, 12113, 17539 ], nil, [ 0.01435, 0.14934, 0.150456, 0.162056, 0.0725136, 0.0118159, 0.175319, 0.156059, 0.112764, 0.232993, 
			  0.0720693, 0.0427371, 0.026124, 0.208682, 0.0398124, 0.0172826, 0.397036, 0.0540845, 0.0265782 ] ]), `(#[ [ 6627, 5167, 8329, 2627, 12429, 1965, 8501, 1113, 10267, 10605, 
			  10924, 4111, 7789, 14523, 12359, 15788, 8681, 14008, 12113, 17539 ], nil, [ 0.386588, 0.0859195, 0.0394077, 0.063099, 0.300935, 0.30549, 0.01083, 0.135276, 0.250209, 0.0271994, 
			  0.264901, 0.0389789, 0.116455, 0.108077, 0.0425705, 0.0306453, 0.328715, 0.0230529, 0.0121518 ] ]) ]
			;
		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\triclamp],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
					// triangle clamp
			[ `(#[ [ 13093, 8627, 3613, 14639, 17986, 12983, 8209, 14851, 16301, 10289, 
			  3623, 557, 10657, 8344, 5010, 10529, 14946, 17707, 6952, 7025 ], nil, [ 0.304671, 0.134628, 0.0103252, 0.208942, 0.0751309, 0.0278358, 0.0195625, 0.0284075, 0.025962, 0.162105, 
			  0.205826, 0.0109359, 0.0507557 ] ]), `(#[ [ 13093, 8627, 3613, 14639, 17986, 12983, 8209, 14851, 16301, 10289, 
			  3623, 557, 10657, 8344, 5010, 10529, 14946, 17707, 6952, 7025 ], nil, [ 0.0760333, 0.0671663, 0.0406092, 0.136128, 0.0858248, 0.317029, 0.0869777, 0.398189, 0.0360755, 0.0253582, 
			  0.015834, 0.0352862, 0.0400827 ] ]) ];
			
		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\caribmetal],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
		
			// carib metal
			[ `(#[ [ 9623, 13553, 8779, 2269, 15727, 2521, 7559, 17539, 11027, 8017, 
			  12203, 8059, 7793, 9719, 9923, 4057, 16301, 15959, 17053, 2687 ], nil, [ 0.395472, 0.150439, 0.0319315, 0.0365471, 0.084606, 0.0124477, 0.0620742, 0.035012, 0.335959, 0.0315269, 
			  0.0950439, 0.0282403 ] ]), `(#[ [ 18583, 7639, 13109, 18679, 9973, 9851, 15619, 5077, 6761, 2371, 
			  5323, 4049, 10987, 12601, 8677, 2657, 16811, 14699, 9461, 16139 ], nil, [ 0.0190853, 0.371274, 0.249438, 0.106905, 0.0492259, 0.0137592, 0.0243555, 0.0159711, 0.278088, 0.381247, 
			  0.0576057, 0.198145 ] ]) ];
  
		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\out],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
					// out
			[ `(#[ [ 6143, 14143, 1259, 15161, 18701, 11969, 1481, 17077, 6089, 18553, 
			  7927, 17681, 16249, 4861, 4327, 12413, 4831, 4261, 1277, 13963 ], nil, [ 0.0183494, 0.164915, 0.020293, 0.0237454, 0.0115894, 0.0331545, 0.0253514, 0.0278954, 0.0133363, 0.0142253, 
			  0.0321243, 0.0818414, 0.0352044, 0.0329048, 0.0189886, 0.155727 ] ]), `(#[ [ 4679, 3191, 4831, 11311, 5059, 14281, 2819, 10559, 4001, 15877, 
			  3797, 4409, 18481, 14321, 4861, 11657, 14759, 12907, 9833, 8273 ], nil, [ 0.0271422, 0.139924, 0.0425134, 0.120621, 0.0135456, 0.302784, 0.0735207, 0.0313994, 0.124261, 0.0490638, 
			  0.0633272, 0.139401, 0.0517886, 0.0301432, 0.16271, 0.0268928 ] ]) ];



		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\phex],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
			// phex
			[ `(#[ [ 3879.31, 3181.53, 3470.98, 707.509, 1697.25, 2508.48, 646.095, 845.803, 1901.8, 1767.1, 
			  2980.85, 2732.48, 2945.26, 1748.01, 3414.02, 2939.26, 903.932 ], nil, [ 0.259785, 0.624203, 0.783554, 0.157531, 0.498193, 0.456637, 0.744737, 0.743251, 0.293179, 0.383007, 
			  0.454819, 0.114038, 0.788798, 0.235161, 0.34046, 0.549168, 0.734222 ] ]), `(#[ [ 2055.12, 1607.65, 880.641, 3040.29, 1200.53, 3627.37, 3594, 2364.09, 2081.63, 3510.74, 
			  2757.28, 2737.48, 2406.97, 3074.45, 1908.21, 1158.06, 1127.66 ], nil, [ 0.463754, 0.763404, 0.473397, 0.512107, 0.483584, 0.357553, 0.123172, 0.547983, 0.303337, 0.457615, 
			  0.542347, 0.22441, 0.511024, 0.398223, 0.251281, 0.236503, 0.482499 ] ]) ];

		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\plumber],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
		//plumber
		[ `(#[ [ 4376.14, 5297.59, 5820.82, 2287.85, 1605.74, 4247.86, 3733.3, 2450.68, 4010.07, 5048.28, 
		  2021.84, 1670.43, 5114.38, 3319.98, 1858.09, 4871.28, 4113.46 ], nil, [ 0.332829, 0.480334, 0.420745, 0.238697, 0.590406, 0.124086, 0.60641, 0.35726, 0.518723, 0.284843, 
		  0.516334, 0.315202, 0.742551, 0.703347, 0.567195, 0.729386, 0.475684 ] ]), `(#[ [ 1638.51, 4109.32, 5286, 5906.65, 4807.09, 3894.12, 3419.79, 2902.41, 3200.73, 2204.2, 
		  4702.28, 4413.58, 1843.05, 6100.45, 5970.09, 3058.18, 3972.2 ], nil, [ 0.266937, 0.200708, 0.33201, 0.390462, 0.441657, 0.281699, 0.630093, 0.174275, 0.532417, 0.679309, 
		  0.470881, 0.439217, 0.446297, 0.668443, 0.599267, 0.512042, 0.335511 ] ]) ];
  
		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\gank],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
		//gank
		[ `(#[ [ 5478.12, 4110.38, 4760.85, 8249.97, 4153.32, 2614.98, 4651.78, 2087.5, 7932.41, 2432.61, 
		  6091.87, 6288.88, 3773.83 ], nil, [ 0.784061, 0.601153, 0.230384, 0.797366, 0.686342, 0.427943, 0.121492, 0.1418, 0.398534, 0.701212, 
		  0.130095, 0.577904, 0.130735 ] ]), `(#[ [ 5010.93, 7269.4, 2095.01, 3133.02, 3864.4, 3554.45, 4832.23, 9317.37, 8430.82, 3527.99, 
		  9191.65, 2476.45, 3707.46 ], nil, [ 0.25854, 0.175122, 0.649542, 0.603506, 0.630602, 0.111656, 0.291334, 0.694663, 0.774429, 0.185166, 
		  0.222252, 0.480278, 0.552341 ] ]) ];
  
		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\genki],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
		//genki
		[ `(#[ [ 6242.06, 3205.3, 4874.91, 3169.28, 3673.99, 4646.82, 4284.14, 5155.68, 2705.52, 6740.86, 
		  4832.43, 4116.03, 3929.42, 3258.15, 2007.7, 7377.11, 2095, 5324.72, 4326.94, 3531.99, 
		  4996.25 ], nil, [ 0.0812703, 0.289397, 0.0555592, 0.325529, 0.102573, 0.122136, 0.025782, 0.046204, 0.0939457, 0.0205466, 
		  0.082707, 0.167394, 0.0318926, 0.0509089, 0.0205059, 0.0266554, 0.210396, 0.135273, 0.209252, 0.0641922, 
		  0.172627 ] ]), `(#[ [ 5319.45, 4858.96, 7558.3, 4491.92, 3486.3, 7460.13, 5856.48, 6732.36, 7499.83, 2652.8, 
		  5875.79, 5246.33, 4379.59, 3441.06, 5902.21, 6001.99, 6711.56, 4312.1, 2479.14, 6046.24, 
		  3393.13 ], nil, [ 0.164875, 0.179955, 0.0106593, 0.181948, 0.0410345, 0.212718, 0.0105322, 0.151949, 0.0975639, 0.374178, 
		  0.0669559, 0.246078, 0.152434, 0.0414171, 0.296129, 0.0237353, 0.117148, 0.257567, 0.0515672, 0.0162376, 
		  0.022805 ] ]) ];

		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\geyyynk],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
		//geyyynk
		[ `(#[ [ 2988.36, 4641.85, 1200.73, 2105.13, 2451.75, 4592.98, 4800.1, 3859.57, 4035.55, 4077.45, 
		  3687.67, 1646.68, 1739.28, 1321.81, 2690.67, 4233.29, 1505.58, 1718.2, 751.362, 4965.17, 
		  3522.6 ], nil, [ 0.149236, 0.237282, 0.0344865, 0.348832, 0.0220867, 0.0238802, 0.0295692, 0.0481518, 0.154031, 0.125693, 
		  0.0471917, 0.0203231, 0.0393852, 0.0989048, 0.0537919, 0.119769, 0.0258739, 0.145177, 0.0808096, 0.0388504, 
		  0.252425 ] ]), `(#[ [ 2158.3, 2258.49, 3983.57, 770.949, 4877.25, 3541.82, 1669.77, 2424.43, 3923.18, 4890.52, 
		  4961.3, 5334.93, 4025.32, 4633.61, 3788.61, 4628.54, 3662.69, 5221.49, 4300.53, 1546.1, 
		  4156.23 ], nil, [ 0.253346, 0.0352605, 0.119383, 0.0633781, 0.0635492, 0.0124307, 0.0354971, 0.13337, 0.398734, 0.0236294, 
		  0.1393, 0.0103872, 0.0715449, 0.069538, 0.262093, 0.0732683, 0.0116285, 0.105353, 0.036287, 0.216802, 
		  0.0802132 ] ]) ];

		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\metalwhip],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=

		//metalwhip
		[ `(#[ [ 1798, 1630.57, 3620.19, 5296.37, 1521.87, 4949.91, 5043.01, 4791.08, 2592.27, 4086.46, 
		  4471.23, 3571.71, 2227.32, 3810.16, 4183.13, 2325.55, 4212.27, 4424, 2284.65, 3652.67, 
		  4043.93 ], nil, [ 0.349702, 0.0753341, 0.305373, 0.39207, 0.0104683, 0.0341372, 0.284371, 0.130507, 0.101175, 0.0508798, 
		  0.0133232, 0.303892, 0.185509, 0.0167672, 0.030275, 0.0941144, 0.0363727, 0.0247033, 0.0140735, 0.0267875, 
		  0.0105945 ] ]), `(#[ [ 1652.77, 4638.23, 1552.16, 2119.03, 2130.16, 4122.25, 1519.17, 1959.58, 3472.57, 5023.96, 
		  3690.77, 4152.46, 1772.07, 3154.8, 5290.74, 2088.17, 2996.74, 1674.4, 4379.4, 2743.14, 
		  3541.92 ], nil, [ 0.359664, 0.073364, 0.18514, 0.0264016, 0.299233, 0.024802, 0.177611, 0.132118, 0.0993154, 0.296376, 
		  0.063777, 0.0482162, 0.0120073, 0.0649643, 0.0397482, 0.0137988, 0.145363, 0.0901069, 0.220684, 0.202041, 
		  0.0231804 ] ]) ];

		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\vidgame],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
	
		// vidgame
		[ `(#[ [ 2103.68, 2113.58, 2097.21, 2108.76, 2093.37, 2090.78, 2087.05, 2093.25, 2097.97, 2103.71, 
		  2109.73, 2092.74, 2084.87, 2088.61, 2102.46, 2078.03, 2098.69, 2089.85, 2103.11, 2088.5, 
		  2073.68 ], nil, [ 0.0229391, 0.126081, 0.0160633, 0.0111662, 0.0774669, 0.0775473, 0.0303769, 0.165986, 0.301918, 0.211407, 
		  0.0283371, 0.145146, 0.0236464, 0.0318924, 0.0313058, 0.0223112, 0.0166512, 0.130607, 0.388753, 0.0827415, 
		  0.0295554 ] ]), `(#[ [ 2089.01, 2105.28, 2086.48, 2093.81, 2096.51, 2085.85, 2089.13, 2101.11, 2088.94, 2089.41, 
		  2087.62, 2113.13, 2097.62, 2109.55, 2075.75, 2099.46, 2084.4, 2080.4, 2080.32, 2118.22, 
		  2072.81 ], nil, [ 0.230897, 0.0260808, 0.0373819, 0.0574443, 0.0259771, 0.0158768, 0.109859, 0.0279894, 0.166986, 0.0109301, 
		  0.103447, 0.0653897, 0.0692289, 0.110849, 0.040938, 0.0287625, 0.238134, 0.247398, 0.198107, 0.171935, 
		  0.0130251 ] ]) ];
	
		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);



Instr([\metal,\chink],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
		
		// chink armor
		[ `(#[ [ 6279.13, 2510.06, 2225.22, 5878.51, 2780.29, 4167.24, 2638.34, 4454.37, 3488.74, 4155.56, 
		  4479.51, 4684.78, 6314.9, 5454.33 ], nil, [ 0.142359, 0.0993297, 0.387077, 0.0215918, 0.0121872, 0.0325009, 0.0202109, 0.0668291, 0.185181, 0.0307829, 
		  0.296845, 0.181332, 0.0131175, 0.0302516 ] ]), `(#[ [ 4114.48, 4480.14, 4213.25, 5061.81, 5099.89, 6579.06, 5693.61, 2097.39, 1832.75, 2350.44, 
		  2943.5, 4822.11, 7196.04, 2772.56 ], nil, [ 0.0766553, 0.0194855, 0.0417889, 0.366954, 0.0669006, 0.0360836, 0.0144747, 0.269213, 0.0309613, 0.0211683, 
		  0.0262302, 0.0591312, 0.0311259, 0.0711358 ] ]) ];


		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\cowboy],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=
		
		// cowboy horse
		[ `(#[ [ 1529.7, 1483.76, 1535.99, 1484.43, 1505.93, 1489.52, 1520.41, 1488.2, 1485.2, 1484.89, 
		  1531.32, 1523.36, 1499.86, 1515.78 ], nil, [ 0.113974, 0.0999759, 0.240025, 0.0511734, 0.22413, 0.0680363, 0.228308, 0.0525205, 0.0169197, 0.131742, 
		  0.18775, 0.0991267, 0.119733, 0.0575907 ] ]), `(#[ [ 1530.7, 1498.63, 1501.59, 1526.8, 1513.55, 1502.9, 1524.68, 1515.48, 1523.02, 1513.11, 
		  1484.01, 1535.29, 1496.4, 1513.86 ], nil, [ 0.212696, 0.0171297, 0.0768345, 0.0789025, 0.323539, 0.0921697, 0.0149089, 0.102342, 0.117676, 0.058209, 
		  0.0735961, 0.0207109, 0.385993, 0.04467 ] ]) ];

		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);

Instr([\metal,\lift],{ arg trig,decay=0.04,noise=0.03,freqScale=1.0,timeScale=1.0;
		var z;
		z=

		// lift
		[ `(#[ [ 3595.31, 4416, 2659.64, 2674.54, 5109.72, 5052, 5014.73, 4572.31, 2056.51, 2375.64, 
		  4183.58, 5147.99, 2516.09, 2128.95 ], nil, [ 0.0308757, 0.0158017, 0.0869313, 0.0399709, 0.0285934, 0.0265625, 0.0507506, 0.0503446, 0.0438829, 0.0471252, 
		  0.0482357, 0.0141696, 0.193109, 0.318459 ] ]), `(#[ [ 2888.62, 3284.68, 5021.07, 5102.17, 1983.28, 3517.99, 2245.2, 4616.49, 4275.45, 4531.64, 
		  2259.18, 4070.48, 2212.17, 3874.78 ], nil, [ 0.12249, 0.0162018, 0.083984, 0.0499467, 0.273614, 0.0146115, 0.0111043, 0.173625, 0.398495, 0.126442, 
		  0.0897033, 0.0127842, 0.266187, 0.0142088 ] ]) ];
		
		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);
},nil,\audio);













/**

Instr([\cymbals,\cymbalism],{ arg trig,qnty=2,decay=0.04,noise=0.01;

		var z, f1, f2;
		f1 = 500 + 2000.0.rand;
		f2 = 8000.0.rand;
		z = Array.fill(2, {
			`[	// sine oscil bank specification :
				y = Array.fill(qnty, { f1 + f2.rand} ), // frequencies
				nil, 							// amplitudes default to 1.0
				Array.fill(qnty, { exprand(0.01,0.4) })	// ring times
			]
		});
		Post <<< z << Char.nl << Char.nl;
		
		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)));	
});


Instr([\cymbals,\primes],{ arg trig,qnty=2,decay=0.04,noise=0.01,freqScale=1.0,timeScale=1.0;

		var z,a;
		
		a= Array.rand(20,500,19000).collect({ arg v,i; if(0.6.coin,{ v.nextPrime},{v}) });
		
		z = Array.fill(2, {
			`[	// sine oscil bank specification :
				y = a, // frequencies
				nil, 							// amplitudes default to 1.0
				Array.fill(qnty, { exprand(0.01,0.4) })	// ring times
			]
		});
		Post <<< z << Char.nl << Char.nl;
		
		Klank.ar(z, Decay.ar(Impulsar.ar(trig), decay, WhiteNoise.ar(noise)),freqScale,0.0,timeScale);	
});


**/


