{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 m = \cf3 OSCtree\cf2 (\cf3 nil\cf2 , \cf4 \\sc\cf2  -> \cf3 nil\cf2 ).add;\
m.tree.postcs;\cf5 ""\cf2 ;\
\
\cf3 OSCtree\cf2 (\cf3 nil\cf2 , \cf4 \\sc\cf2  -> [\cf4 \\test\cf2  -> \{ \cf4 \\hello\cf2  \}]);\
m.tree.postcs;\cf5 ""\cf2 ;\
\
(\
\cf3 OSCtree\cf2 (\cf3 nil\cf2 , \
	\cf4 \\sc\cf2  -> [\
		\cf4 \\test\cf2  -> [\
					\cf4 \\one\cf2  -> \{ \cf4 \\hello\cf2 .postln \}, \
					\cf4 \\two\cf2  -> \{ \cf4 \\hello\cf2 .postln \}\
				], \
		\cf4 \\synth\cf2  -> \{ \cf4 \\alsohello\cf2 .postln \}\
		]\
)\
);\
m.tree.postcs;\cf5 ""\cf2 ;\
\
\cf6 // replacement:\cf2 \
\cf3 OSCtree\cf2 (\cf3 nil\cf2 , \cf4 \\sc\cf2  -> [\cf4 \\test\cf2  -> \{ \cf4 \\mellow\cf2 .postln \}, \cf4 \\synth\cf2  -> \{ \cf4 \\alsohello\cf2 .postln \}]);\
m.tree.postcs;\cf5 ""\cf2 ;\
\
\cf6 // complementing:\cf2 \
\cf3 OSCtree\cf2 (\cf3 nil\cf2 , \cf4 \\sc\cf2  -> [\cf4 \\test\cf2  -> \{ \cf4 \\well\cf2 .postln \}, \cf4 \\synth\cf2  -> \{ \cf4 \\another\cf2 .postln \}], \cf3 false\cf2 );\
m.tree.postcs;\cf5 ""\cf2 ;\
\
\
n = \cf3 NetAddr\cf2 (\cf5 "127.0.0.1"\cf2 , 57120);\
\
n.sendMsg(\cf4 \\sc\cf2 , \cf4 \\synth\cf2 );\
n.sendMsg(\cf4 \\sc\cf2 , \cf4 \\test\cf2 );\
\
m.clear;\
\
\cf6 // a better example:\cf2 \
\
\cf3 OSCtree\cf2 (\cf3 nil\cf2 , \cf4 \\sc\cf2  -> \
	[\
		\cf6 /* todo */\cf2 \
	\
	\
	\
	]\
);\
\
instead of the \cf4 \\symbol\cf2  you can add a function that returns \cf3 true\cf2  or \cf3 false\cf2 , an array of all that match, or \cf3 nil\cf2 , which matches everything...\
\
\
\
\
\
\
\
\
\cf6 // another method:\cf2 \
\cf6 // noop yet.\cf2 \
\
\cf6 /*m.setSubtree(\\sc -> \{ \\b.postln \});\
m.tree.postcs;"";*/\cf2 \
\
m.clear;}