<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title></title>
<meta name="Generator" content="Cocoa HTML Writer">
<meta name="CocoaVersion" content="1038.29">
<style type="text/css">
p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 14.0px Helvetica; color: #000000}
p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000; min-height: 14.0px}
p.p3 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000}
p.p4 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #cd0b0b}
p.p5 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #cd0b0b}
p.p6 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #000000}
p.p7 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #000000; min-height: 12.0px}
p.p8 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #2024c7}
p.p9 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #737373}
span.s1 {font: 18.0px Helvetica; color: #2024c7}
span.s2 {color: #2024c7}
span.s3 {color: #000000}
span.s4 {color: #cd0b0b}
span.s5 {color: #008417}
span.Apple-tab-span {white-space:pre}
</style>
</head>
<body>
<p class="p1"><span class="s1"><b>MIDIKtl</b></span><b><span class="Apple-tab-span">	</span>howTo write subclasses for your own controller devices</b></p>
<p class="p2"><br></p>
<p class="p3"><span class="s2">This</span> is a documented version of the <span class="s2">PFKtl</span> class.</p>
<p class="p3"><span class="s2">For</span><span class="Apple-converted-space">  </span>implementing shiftable mapped areas on <span class="s2">NodeProxyEditors</span> and <span class="s2">ProxyMixers</span>,<span class="Apple-converted-space"> </span></p>
<p class="p3">see the <span class="s2">NanoKtl</span> class.<span class="Apple-converted-space"> </span></p>
<p class="p2"><br></p>
<p class="p2"><br></p>
<p class="p4">// --- Class file MyOwnKtl.sc ---//</p>
<p class="p2"><span class="Apple-tab-span">	</span></p>
<p class="p5"><span class="s2">MyOwnKtl</span><span class="s3"> : </span><span class="s2">MIDIKtl</span><span class="s3"> {<span class="Apple-tab-span">	</span></span>// put your Ktl name here</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="s2">classvar</span> &lt;&gt;verbose = <span class="s2">false</span>; <span class="Apple-tab-span">	</span><span class="s4">// debugging flag</span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span></span><span class="s2">var</span><span class="s3"> &lt;&gt;softWithin = 0.05;<span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// will use softSet, so have a tweakable limit for it</p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span></span><span class="s2">var</span><span class="s3"> &lt;lastVals;<span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// remember the last values for better control</p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span></span><span class="s2">var</span><span class="s3"> &lt;valRange, &lt;minval, &lt;range;<span class="Apple-tab-span">	</span></span>// some MIDI controllers may not reach full 0-127 range,<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// provide a global range for that.</p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// (if the range is different for each controller,<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// make a dict of all ranges.)</p>
<p class="p7"><br></p>
<p class="p7"><br></p>
<p class="p6"><span class="Apple-tab-span">	</span>init {<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span><span class="s2">super</span><span class="s3">.init;<span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// get the ctlNames created for MyOwnKtl</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>ctlNames = defaults[<span class="s2">this</span>.class];</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>orderedCtlNames = ctlNames.keys.asArray.sort;<span class="Apple-tab-span">	</span><span class="s4">// a sorted list of the names</span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>lastVals = ();<span class="Apple-tab-span">	</span></span>// initialise lastVals</p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span><span class="s2">this</span><span class="s3">.valRange = [0, 127];<span class="Apple-tab-span">	</span></span>// set default valRange;<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span>}</p>
<p class="p7"><br></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// makeDefaults puts ctlNames for this device/class<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// into MIDIKtl.defaults.</p>
<p class="p6"><span class="Apple-tab-span">	</span>*makeDefaults {<span class="Apple-converted-space"> </span></p>
<p class="p7"><br></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// just one bank of sliders</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>defaults.put(<span class="s2">this</span>,<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>(<span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// clear names for the elements;</p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// '0_7' is midi chan 0, cc number 7,<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// combined into a symbol for speed.<span class="Apple-converted-space"> </span></p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>sl1: <span class="s5">'0_7'</span>, sl2: <span class="s5">'1_7'</span>, sl3: <span class="s5">'2_7'</span>, sl4: <span class="s5">'3_7'</span>,<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>sl5: <span class="s5">'4_7'</span>, sl6: <span class="s5">'5_7'</span>, sl7: <span class="s5">'6_7'</span>, sl8: <span class="s5">'7_7'</span>,<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>sl9: <span class="s5">'8_7'</span>, sl10: <span class="s5">'9_7'</span>, sl11: <span class="s5">'10_7'</span>, sl12: <span class="s5">'11_7'</span>,<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>sl13: <span class="s5">'12_7'</span>, sl14: <span class="s5">'13_7'</span>, sl15: <span class="s5">'14_7'</span>, sl16: <span class="s5">'15_7'</span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>)</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>);</p>
<p class="p6"><span class="Apple-tab-span">	</span>}</p>
<p class="p7"><span class="Apple-tab-span">	</span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// a method for registering actions based on ctl name.<span class="Apple-converted-space"> </span></p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p8"><span class="s3"><span class="Apple-tab-span">	</span>mapCC { </span>|ctl= \sl1, action|<span class="s3"><span class="Apple-converted-space"> </span></span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> ccDictKey = ctlNames[ctl]; <span class="s4">// e.g. '0_42'</span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>if (ccDictKey.isNil) {<span class="Apple-converted-space"> </span></p>
<p class="p9"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>warn(</span>"key % : no chan_ccnum found!\n"<span class="s3">.format(ctl));</span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>} {<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>ccDict.put(ccDictKey, action);</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>}</p>
<p class="p6"><span class="Apple-tab-span">	</span>}</p>
<p class="p7"><span class="Apple-tab-span">	</span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// methods to map to various JITGuis:<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// EnvirGui, TdefGui, PdefGui, NdefGui, and ProxyMixer.<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// these have a number of design decisions based on <span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// how this device can work best for these kinds of guis.</p>
<p class="p7"><br></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// assume this has only a limited number of items (sliders)</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span>mapToEnvirGui { <span class="s2">|gui, indices|</span><span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> elementKeys;<span class="Apple-converted-space"> </span></p>
<p class="p7"><br></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// which slider keys to be used for the gui?</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>indices = indices ? (1..8);<span class="Apple-converted-space"> </span></p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>elementKeys = orderedCtlNames[indices - 1];<span class="Apple-converted-space"> </span></p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// for each slider,<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// get the editKey, the sliders lastVal,<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// and do use softSet for setting the proxy's param.<span class="Apple-converted-space"> </span></p>
<p class="p5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>//</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>elementKeys.do { <span class="s2">|key, i|</span> <span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">this</span>.mapCC(key,<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>{ <span class="s2">|ccval|</span><span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> envir = gui.envir;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> parKey =<span class="Apple-converted-space">  </span>gui.editKeys[i];</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> normVal = <span class="s2">this</span>.norm(ccval);</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> lastVal = lastVals[key];</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>if (envir.notNil and: { parKey.notNil } ) {<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>envir.softSet(parKey, normVal, softWithin, <span class="s2">false</span>, lastVal, gui.getSpec(parKey))</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>};</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>// remember lastVal for the next time</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>lastVals.put(key, normVal) ;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>}</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>)</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>};</p>
<p class="p6"><span class="Apple-tab-span">	</span>}</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>// for PdefGui and TdefGui, just map to their EnvirGui.</p>
<p class="p6"><span class="Apple-tab-span">	</span>mapToPdefGui { <span class="s2">|gui, indices|</span><span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">this</span>.mapToEnvirGui(gui.envirGui, indices);</p>
<p class="p6"><span class="Apple-tab-span">	</span>}</p>
<p class="p7"><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span>mapToTdefGui { <span class="s2">|gui, indices|</span><span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">this</span>.mapToEnvirGui(gui.envirGui, indices);</p>
<p class="p6"><span class="Apple-tab-span">	</span>}</p>
<p class="p7"><br></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>// NdefGui:<span class="Apple-converted-space"> </span></p>
<p class="p8"><span class="s3"><span class="Apple-tab-span">	</span>mapToNdefGui { </span>|gui, indices, lastIsVol = true|<span class="s3"><span class="Apple-converted-space"> </span></span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> elementKeys, lastKey;<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>indices = indices ? (1..8);<span class="Apple-converted-space"> </span></p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>elementKeys = orderedCtlNames[indices - 1].postcs;<span class="Apple-converted-space"> </span></p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p7"><br></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>/// last slider can optionally be a volume control</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>if (lastIsVol) {<span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>lastKey = elementKeys.pop;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>indices.pop;</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// use last slider for proxy volume</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">this</span>.mapCC(lastKey, { <span class="s2">|ccval|</span><span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> lastVal = lastVals[lastKey];</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> mappedVol = <span class="s5">\amp</span>.asSpec.map(<span class="s2">this</span>.norm(ccval));</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> proxy = gui.proxy;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>if (proxy.notNil) { proxy.softVol_(mappedVol, softWithin, lastVal: lastVal) };</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>lastVals[lastKey] = mappedVol;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>});</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>};</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>// the other sliders go to the paramGui and will set those</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">this</span>.mapToEnvirGui(gui.paramGui, indices);</p>
<p class="p6"><span class="Apple-tab-span">	</span>}</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>// ProxyMixer is more complex:<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>// here it is again assumed that the mixer has no more than the number of<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>// available sliders. if you scoll on the mixer,<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>// they are still reachable.</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p8"><span class="s3"><span class="Apple-tab-span">	</span>mapToMixer { </span>|mixer, numVols = 8, indices, lastEdIsVol = true, lastIsMaster = true|<span class="s3"><span class="Apple-converted-space"> </span></span></p>
<p class="p7"><span class="Apple-converted-space"> <span class="Apple-tab-span">	</span></span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> server = mixer.proxyspace.server;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> <span class="Apple-tab-span">	</span>elementKeys, lastKey, spec;</p>
<p class="p7"><br></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>indices = indices ? (1..16);<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>elementKeys = orderedCtlNames[indices - 1];<span class="Apple-converted-space"> </span></p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// add master volume on slider 16</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>if (lastIsMaster) {<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>lastKey = elementKeys.pop;<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>spec = <span class="s2">Spec</span>.add(<span class="s5">\mastaVol</span>, [server.volume.min, server.volume.max, <span class="s5">\db</span>]);</p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// this.mapCC(lastKey, Volume.softMasterVol(0.05, server, \midi.asSpec));</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">this</span>.mapCC(lastKey, { <span class="s2">|ccval|</span> server.volume.volume_(spec.map(<span class="s2">this</span>.norm(ccval))) });</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>};<span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p7"><br></p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// map first n sliders to proxy volumes</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>elementKeys.keep(numVols).do { <span class="s2">|key, i|</span><span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">this</span>.mapCC(key,<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>{ <span class="s2">|ccval|</span><span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> proxy = mixer.arGuis[i].proxy;<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> lastVal, mappedVal, lastVol;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">var</span> spec = <span class="s5">\amp</span>.asSpec;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>if (proxy.notNil) {<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>lastVal = lastVals[key];<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>mappedVal = spec.map(<span class="s2">this</span>.norm(ccval));<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>lastVol = if (lastVal.notNil) { spec.asSpec.map(lastVal) };<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>proxy.softVol_(spec.map(mappedVal), softWithin, <span class="s2">true</span>, lastVol );<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>};</p>
<p class="p5"><span class="s3"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>//<span class="Apple-tab-span">	</span>[key, proxy.key, mappedVal].postcs;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>lastVals[key] =<span class="Apple-converted-space">  </span>mappedVal;</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>};</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>)</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>};</p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>// map the rest of the sliders to the NdefGui!<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s2">this</span>.mapToNdefGui(mixer.editGui, (numVols + 1 .. elementKeys.size), lastEdIsVol);</p>
<p class="p6"><span class="Apple-tab-span">	</span>}</p>
<p class="p6">}</p>
<p class="p2"><br></p>
<p class="p4">// --- end of Class file MyOwnKtl.sc ---//</p>
<p class="p2"><br></p>
</body>
</html>
